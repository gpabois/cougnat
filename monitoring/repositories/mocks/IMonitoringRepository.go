// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	models "github.com/gpabois/cougnat/monitoring/models"
	mock "github.com/stretchr/testify/mock"

	option "github.com/gpabois/cougnat/core/option"

	result "github.com/gpabois/cougnat/core/result"
)

// IMonitoringRepository is an autogenerated mock type for the IMonitoringRepository type
type IMonitoringRepository struct {
	mock.Mock
}

type IMonitoringRepository_Expecter struct {
	mock *mock.Mock
}

func (_m *IMonitoringRepository) EXPECT() *IMonitoringRepository_Expecter {
	return &IMonitoringRepository_Expecter{mock: &_m.Mock}
}

// GetOrganisationMonitoring provides a mock function with given fields: organisationID
func (_m *IMonitoringRepository) GetOrganisationMonitoring(organisationID string) result.Result[option.Option[models.OrganisationMonitoring]] {
	ret := _m.Called(organisationID)

	var r0 result.Result[option.Option[models.OrganisationMonitoring]]
	if rf, ok := ret.Get(0).(func(string) result.Result[option.Option[models.OrganisationMonitoring]]); ok {
		r0 = rf(organisationID)
	} else {
		r0 = ret.Get(0).(result.Result[option.Option[models.OrganisationMonitoring]])
	}

	return r0
}

// IMonitoringRepository_GetOrganisationMonitoring_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetOrganisationMonitoring'
type IMonitoringRepository_GetOrganisationMonitoring_Call struct {
	*mock.Call
}

// GetOrganisationMonitoring is a helper method to define mock.On call
//   - organisationID string
func (_e *IMonitoringRepository_Expecter) GetOrganisationMonitoring(organisationID interface{}) *IMonitoringRepository_GetOrganisationMonitoring_Call {
	return &IMonitoringRepository_GetOrganisationMonitoring_Call{Call: _e.mock.On("GetOrganisationMonitoring", organisationID)}
}

func (_c *IMonitoringRepository_GetOrganisationMonitoring_Call) Run(run func(organisationID string)) *IMonitoringRepository_GetOrganisationMonitoring_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *IMonitoringRepository_GetOrganisationMonitoring_Call) Return(_a0 result.Result[option.Option[models.OrganisationMonitoring]]) *IMonitoringRepository_GetOrganisationMonitoring_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *IMonitoringRepository_GetOrganisationMonitoring_Call) RunAndReturn(run func(string) result.Result[option.Option[models.OrganisationMonitoring]]) *IMonitoringRepository_GetOrganisationMonitoring_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewIMonitoringRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewIMonitoringRepository creates a new instance of IMonitoringRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIMonitoringRepository(t mockConstructorTestingTNewIMonitoringRepository) *IMonitoringRepository {
	mock := &IMonitoringRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
